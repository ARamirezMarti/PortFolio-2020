{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/contact/contact.component.ts","webpack:///src/app/components/contact/contact.component.html","webpack:///src/app/components/experience/experience.component.ts","webpack:///src/app/components/experience/experience.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/projects/projects.component.ts","webpack:///src/app/components/projects/projects.component.html","webpack:///src/app/components/skills/skills.component.ts","webpack:///src/app/components/skills/skills.component.html","webpack:///src/app/models/form.ts","webpack:///src/app/services/form.service.ts","webpack:///src/app/services/project.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","translate","setDefaultLang","language","use","useLanguage","selector","templateUrl","styleUrls","AppModule","loader","provide","useFactory","HttpLoaderFactory","deps","declarations","providers","bootstrap","http","ContactComponent","_formService","formulario","msg","form","console","log","sendForm","subscribe","response","reset","error","onSubmit","ExperienceComponent","num","isShown1","isShown2","isShown3","showDiv","HomeComponent","ProjectsComponent","_projectService","url","projectRquest","getProjects","projects","project","SkillsComponent","Form","name","company","email","telephone","message","FormService","_http","formData","fd","JSON","stringify","post","ProjectService","get","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { SkillsComponent } from './components/skills/skills.component';\r\nimport { ExperienceComponent} from './components/experience/experience.component';\r\nimport { ProjectsComponent} from './components/projects/projects.component';\r\nimport { ContactComponent} from './components/contact/contact.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:HomeComponent},\r\n  {path:'skills',component:SkillsComponent},\r\n  {path:'experience',component:ExperienceComponent},\r\n  {path:'projects',component:ProjectsComponent},\r\n  {path:'contact',component:ContactComponent},\r\n  ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private translate:TranslateService){\r\n    translate.setDefaultLang('es');\r\n\r\n  }\r\n\r\n  useLanguage(language: string) {\r\n    this.translate.use(language);\r\n  }\r\n \r\n}\r\n\r\n\r\n  \r\n","\r\n\r\n\r\n<div class=\"frame\">\r\n   <img class=\"photo\" src=\"../assets//leftphoto.jpeg\">\r\n   <div class=\"divLogo\"> <img class=\"logo\" src=\"../assets//icons//logo.png\" alt=\"\"> </div>   \r\n   <div class=\"lengDiv\">\r\n        \r\n        <button (click)=\"useLanguage('en')\">English</button>\r\n        <button (click)=\"useLanguage('es')\">Español</button>\r\n    </div>\r\n   <nav class=\"menu\">\r\n\r\n        <ul>\r\n            \r\n            \r\n           \r\n            <!-- TODO descipcion de mi-->\r\n            <li class=\"liText\"> <a [routerLink]=\"['']\"\r\n                routerLinkActive=\"router-link-active\"><img src=\"../assets/icons//home.png\" alt=\"\"></a>                   \r\n                <span class=\"menuText\">{{'menu.home'|translate}}</span>\r\n            </li>\r\n\r\n            <!-- TODO POoner mi estudios-->\r\n            <li >\r\n            <a [routerLink]=\"['skills']\"\r\n            routerLinkActive=\"router-link-active\">\r\n            <img src=\"../assets//icons//skills.png\" alt=\"\"> </a>  \r\n            <span class=\"menuText\">{{'menu.skills'|translate}}</span>   \r\n             </li>\r\n\r\n            <!-- TODO  POoner mi  experiencia-->\r\n            <li>\r\n            <a [routerLink]=\"['experience']\"\r\n            routerLinkActive=\"router-link-active\"><img src=\"../assets//icons//experience.png\" alt=\"\"> </a> \r\n            <span class=\"menuText\">{{'menu.experience'|translate}}</span> \r\n            </li>\r\n\r\n            <!-- TODO  POoner mis  proyectos-->\r\n            <li>\r\n                <a [routerLink]=\"['projects']\"\r\n            routerLinkActive=\"router-link-active\"><img src=\"../assets//icons//projects.png\" alt=\"\"></a>  \r\n            <span class=\"menuText\">{{'menu.Projects'|translate}}</span> \r\n  \r\n            </li>\r\n\r\n            <!-- TODO  Form para contactarme-->\r\n            <li>\r\n                <a [routerLink]=\"['contact']\"\r\n            routerLinkActive=\"router-link-active\"><img src=\"../assets//icons//contact.png\" alt=\"\"> </a>   \r\n            <span class=\"menuText\">{{'menu.Contact'|translate}}</span> \r\n           </li>\r\n\r\n        </ul>\r\n       \r\n    </nav>\r\n    \r\n\r\n    <div class=\"container\">\r\n\r\n        <router-outlet></router-outlet>\r\n    \r\n    </div>\r\n    \r\n</div>\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { SkillsComponent } from './components/skills/skills.component';\r\nimport { ExperienceComponent } from './components/experience/experience.component';\r\nimport { ProjectsComponent } from './components/projects/projects.component';\r\nimport { ContactComponent } from './components/contact/contact.component';\r\n\r\nimport {ProjectService} from '../app/services/project.service';\r\nimport {FormService } from '../app/services/form.service';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\n\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    SkillsComponent,\r\n    ExperienceComponent,\r\n    ProjectsComponent,\r\n    ContactComponent,\r\n   \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n          provide: TranslateLoader,\r\n          useFactory: HttpLoaderFactory,\r\n          deps: [HttpClient],\r\n      }\r\n    })\r\n  ],\r\n  providers: [\r\n    ProjectService,\r\n    FormService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Form} from \"../../models/form\";\nimport { FormService} from '../../services/form.service';\n\n\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css'],\n  providers:[\n    FormService\n  ]\n})\nexport class ContactComponent implements OnInit {\n\n  public formulario;\n  public msg;\n\n  constructor( private _formService : FormService) {\n    this.formulario = new Form(' ', ' ', ' ', null, ' ')\n    this.msg = '';\n\n    \n   }\n\n  ngOnInit(): void {\n\n  }\n\n  onSubmit(form){\n\n    console.log(this.formulario);\n\n    this._formService.sendForm(this.formulario).subscribe(\n      response => {\n        form.reset();\n        this.msg=\" Email sent\";\n      console.log(response);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n    \n    \n  }\n\n\n\n}\n","\n<div class=\"form\">\n    <p class=\"pass\"> <strong> {{msg}}</strong></p>\n    <form  #formFilled=\"ngForm\" (ngSubmit)=\"onSubmit(formFilled)\">\n        <label for=\"name\"> Name</label>\n        <input type=\"text\" name=\"name\" [(ngModel)]=\"formulario.name\" placeholder=\"name\" required>\n\n        <label for=\"company\"> Company</label>\n        <input type=\"text\" name=\"company\" placeholder=\"company\" [(ngModel)]=\"formulario.company\" required>\n\n        <label for=\"email\"> Contact Email </label>\n        <input type=\"text\" name=\"email\" placeholder=\"email\" [(ngModel)]=\"formulario.email\" required>\n\n        <label for=\"phone\"> Telephone</label>\n        <input type=\"text\" name=\"phone\" [(ngModel)]=\"formulario.telephone\"  required>\n\n        <label for=\"message\"> Message</label>\n        <textarea type=\"textarea\" name=\"message\" [(ngModel)]=\"formulario.message\"  required></textarea>\n\n        <button type=\"submit\" [disabled]=\"!formFilled.valid\">\n            Send\n        </button>\n        \n        \n    </form>\n  \n\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-experience',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.css']\n})\nexport class ExperienceComponent implements OnInit {\n\n  public isShown1:boolean;\n  public isShown2:boolean;\n  public isShown3:boolean;\n\n\n  constructor() {    \n\n   }\n  \n\n  ngOnInit(): void {\n    \n  }\n\n  showDiv(num:number){\n    switch (num) {\n      case 1:\n        this.isShown1=!this.isShown1;\n        break;\n      case 2:\n        this.isShown2=!this.isShown2;\n        break; \n      case 3:\n          this.isShown3=!this.isShown3;\n        break;\n    \n      default:\n        break;\n    }\n    \n  }\n\n \n\n}\n","\n<div class=\"divContent\">\n\n    <button class=\"accordion\" (click)=showDiv(1) >Section 1</button>\n    <div class=\"panel\" *ngIf=\"isShown1\">\n      <p>Contenido seccion 1 </p>\n      \n    </div>\n    \n    <button class=\"accordion\" (click)=showDiv(2) >Section 2</button>\n    <div class=\"panel\" *ngIf=\"isShown2\">\n      <p> contenido seccion 2</p>\n    </div>\n    \n    <button class=\"accordion\"  (click)=showDiv(3) >Section 3</button>\n    <div class=\"panel\" *ngIf=\"isShown3\">\n      <p>contenido seccion3</p>\n    </div>\n\n    \n\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  public titulo:string;\r\n  public content:string;\r\n  constructor() { \r\n \r\n  }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<h1 class=\"titulos\"> {{'home.title'|translate}}</h1>\r\n<p class=\"divContent\">{{'home.content'|translate}}</p>","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectService} from '../../services/project.service';\r\nimport {Project} from '../../models/project';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.css'],\r\n  providers:[ProjectService]\r\n})\r\nexport class ProjectsComponent implements OnInit {\r\n  public projects: Project[];\r\n  public url: string;\r\n\r\n  constructor( private _projectService:ProjectService) { \r\n   \r\n    this.url='http://localhost:3500/api/'\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.projectRquest();\r\n    console.log(this.url);\r\n  }\r\n\r\n\r\n  projectRquest(){\r\n    this._projectService.getProjects().subscribe(\r\n      response => {\r\n\r\n        this.projects = response.project;\r\n        console.log(this.projects);\r\n\r\n      },\r\n      error =>{\r\n        console.log(error);\r\n      }\r\n\r\n    );\r\n  }\r\n}","<div >\r\n    \r\n    <ul >\r\n        <li *ngFor=\"let project of projects\" class=\"project\">\r\n            <!--  Añadimos todo  en un link que nos llevara a \"/proyecto/:id \" --> \r\n               <!-- EL div imagen es una mascara, para poder recortar la imagen y que esten todas iguales -->\r\n              \r\n               <div class=\"divImages\">\r\n                <!-- La imagen al final es una url. \"getimage \" es la URL del back end + la url global + el nombre de la imagen-->\r\n                <!-- Solo la mostrara, si tiene imagen -->\r\n                <img src=\"{{ url+'getimage/'+project.image }}\" *ngIf=\"project.image\">\r\n                \r\n               \r\n            </div>\r\n            <div class=\"description\">\r\n            <h3>{{project.projectName}}</h3>\r\n            <p>{{project.date}}</p>\r\n            <p>Description:  <p>{{project.description}} <p></p>\r\n           \r\n            <p> {{project.langs}}</p>\r\n            </div>\r\n            \r\n                \r\n        </li>\r\n    </ul>\r\n\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.css']\n})\nexport class SkillsComponent implements OnInit {\n\n  public isShown1:boolean;\n  public isShown2:boolean;\n  public isShown3:boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n\n\n\n  showDiv(num:number){\n    switch (num) {\n      case 1:\n        this.isShown1=!this.isShown1;\n        break;\n      case 2:\n        this.isShown2=!this.isShown2;\n        break; \n      case 3:\n          this.isShown3=!this.isShown3;\n        break;\n    \n      default:\n        break;\n    }\n    \n  }\n\n}\n","<div >\n\n    <!-- TODO:; study certifications-->\n    <div class=\"list\">\n        <label  for=\"studies\" style=\"font-size: 20px;\"> <strong> Study Certifications</strong></label>\n        <hr>\n        <div >\n\n            <li class=\"liCertificates\">\n                <div> \n                    <h3>FP Desarrollo de Aplicaciones Web</h3>\n                    <p class=\"date\"> Fecha</p>\n                    <p>Contenido del curso</p>\n                    <a href=\"http://\"> Link to the certificate</a>\n                </div>\n            </li>\n\n\n\n\n\n        </div>\n    </div>\n\n    <div class=\"progresBars\">\n\n        <label  for=\"Idiomas\" style=\"font-size: 20px;\"> <strong> Languages</strong></label>\n            <hr>\n            <label for=\"\">English</label>\n            <div class=\"greyBar\">\n                <div class=\"percentBar\" style=\"width: 50%;\">50%</div>\n            </div>\n\n            <label for=\"\">Spanish</label>\n            <div class=\"greyBar\">\n                <div class=\"percentBar\" style=\"width: 100%;\">100%</div>\n            </div>\n        \n            <!--TODO: Add udemy certifications list-->\n            <label  for=\"Idiomas\" style=\"font-size: 20px;\"> <strong> Udemy Certificates</strong></label>\n            <hr>\n\n            <li class=\"liCertificates\">\n                <div> \n                    <h3>Node js</h3>\n                    <p class=\"date\"> Fecha</p>\n                    <p>Contenido del curso</p>\n                    <a href=\"http://\"> Link to the certificate</a>\n                </div>\n            </li>\n            <li class=\"liCertificates\">\n                <div> \n                    <h3> Master en JavaScript</h3>\n                    <p class=\"date\"> Fecha</p>\n                    <p>Contenido del curso</p>\n                    <a href=\"http://\"> Link to the certificate</a>\n                </div>\n            </li>\n\n        </div>\n\n\n</div>\n\n","export class Form{\r\n\r\n    constructor(\r\n        public name: string, \r\n        public company: string,\r\n        public email: string,\r\n        public telephone: number,\r\n        public message: string\r\n        )\r\n        {}\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class FormService{\r\n\r\n    constructor(private _http:HttpClient){\r\n\r\n    }\r\n\r\n    sendForm(formData): Observable <any>{   \r\n        let fd=JSON.stringify(formData);\r\n        return this._http.post('http://localhost:3500/api/sendform', fd );\r\n    }\r\n\r\n}","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class ProjectService{\r\n\r\n    constructor(private _http:HttpClient){\r\n\r\n    }\r\n\r\n\r\n    // [] of projects -> projects.component.ts from backend\r\n    getProjects(): Observable <any>{\r\n        return this._http.get('http://localhost:3500/api/getdataprojects');\r\n    }\r\n\r\n   \r\n\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}